// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var s=e.isPrimitive,n=r.isPrimitive,a=i,f=t;var l=function(e,r){var i,t,l,m,o,u,d,v;if(!s(e))throw new TypeError(f("invalid argument. Must provide a positive integer. Value: `%s`.",e));if(t=new Array(e),d=e-1,m=0,v=-1,u=0,arguments.length>1){if(!n(r))throw new TypeError(f("invalid argument. Must provide a number. Value: `%s`.",r));return o=r,h}return o=0,p;function p(r){var s,n;if(0===arguments.length)return 0===u?null:1===u?a(m)?NaN:0:u<e?m/(u-1):m/d;if(v=(v+1)%e,a(r))u=e,m=NaN;else{if(u<e)return t[v]=r,m+=(i=r-o)*(r-(o+=i/(u+=1))),1===u?0:m/(u-1);if(1===u)return m=0;if(a(t[v])){for(u=1,o=r,m=0,s=0;s<e;s++)if(s!==v){if(n=t[s],a(n)){u=e,m=NaN;break}m+=(i=n-o)*(n-(o+=i/(u+=1)))}}else!1===a(m)&&(l=t[v],m+=(i=r-l)*(l-o+(r-(o+=i/e))))}return t[v]=r,m/d}function h(r){var s;if(0===arguments.length)return 0===u?null:u<e?m/u:m/e;if(v=(v+1)%e,a(r))u=e,m=NaN;else{if(u<e)return t[v]=r,(m+=(i=r-o)*i)/(u+=1);if(a(t[v])){for(m=0,s=0;s<e;s++)if(s!==v){if(a(t[s])){u=e,m=NaN;break}i=t[s]-o,m+=i*i}}else!1===a(m)&&(l=t[v],m+=(r-l)*(r-o+l-o))}return t[v]=r,m/e}};export{l as default};
//# sourceMappingURL=index.mjs.map
